<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>XWiki</web>
<name>DeletedDocuments</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>Main.AllDocs</parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1253197249000</creationDate>
<date>1360854534000</date>
<contentUpdateDate>1360854534000</contentUpdateDate>
<version>6.3</version>
<title>$msg.get("xe.index.documentsTrash")</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>true</minorEdit>
<syntaxId>xwiki/2.0</syntaxId>
<hidden>false</hidden>
<object>
<class>
<name>XWiki.JavaScriptExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>XWiki.DeletedDocuments</name>
<number>0</number>
<className>XWiki.JavaScriptExtension</className>
<guid>222ca0ed-b042-41d5-9d7e-942c4cc8a94b</guid>
<property>
<cache>long</cache>
</property>
<property>
<code>// Make sure the XWiki.index.trash.documents 'namespace' exists.
if (typeof XWiki == "undefined") {
  XWiki = new Object();
}
if (typeof XWiki.index == "undefined") {
  XWiki.index = new Object();
}
if (typeof XWiki.index.trash == "undefined") {
  XWiki.index.trash = new Object();
}
if (typeof XWiki.index.trash.documents == "undefined") {
  XWiki.index.trash.documents = new Object();
}

/**
 * Callback function used by the DeletedDocuments livetable for generating the HTML code needed to display an entry.
 * 
 * @param row the JSON data corresponding to the entry to be displayed
 * @param i the index of the row in the list of entries
 * @param table the LiveTable javascript object
 */
XWiki.index.trash.documents.displayEntry = function (row, i, table) {
  var tr = new Element('tr'); // The resulting table row
  var page = new Element('a', {'href' : row.url}).update(row.fullname);
  tr.appendChild(new Element('td').update(page));
  tr.appendChild(new Element('td').update(row.title));
  tr.appendChild(new Element('td').update(row.date));
  var deleter = new Element('a', {'href' : row.deleterurl}).update(row.deletername);
  tr.appendChild(new Element('td').update(deleter));
  var actions = new Element('td', {'class' : 'itemActions'});
  if(!row.alreadyExists) {
    if(row.canRestore) {
      var restore = new Element('a', {
          'href' : row.restoreUrl,
          'class' : 'tool restore',
          'title' : "$msg.get('xe.index.trash.documents.actions.restore.tooltip')"
        }).update("$msg.get('xe.index.trash.documents.actions.restore.text')");
      actions.appendChild(restore);
    }
  } else {
    var restore = new Element('a', {
        'href' : row.originalUrl,
        'class' : "tool cannot-restore",
        'title' : "$msg.get('xe.index.trash.documents.actions.cannotRestore.tooltip')"
      }).update("$msg.get('xe.index.trash.documents.actions.cannotRestore.text')");
    actions.appendChild(restore);
  }
  if(row.canDelete) {
    var delete_ = new Element('a', {
        'href' : row.deleteUrl,
        'class' : "tool delete",
        'title' : "$msg.get('xe.index.trash.documents.actions.delete.tooltip')"
      }).update("$msg.get('xe.index.trash.documents.actions.delete.text')");
    actions.appendChild(document.createTextNode(' '));
    actions.appendChild(delete_);
    delete_.observe('click', XWiki.index.trash.documents.confirmDelete.bindAsEventListener(delete_, table, i));
  }
  tr.appendChild(actions);
  return tr;
}

/**
 * Event listener, called when clicking a delete version link. It displays a confirmation box, speeding up the two-step
 * deletion process.
 * 
 * @param event the link activation event
 * @param table the LiveTable javascript object
 * @param rowIdx the index of the row corresponding to the entry to be deleted
 */
XWiki.index.trash.documents.confirmDelete = function(event, table, rowIdx) {
  event.stop();
  if (this.disabled) {
    // Do nothing if the button was already clicked and it's waiting for a response from the server.
    return;
  } else {
    new XWiki.widgets.ConfirmedAjaxRequest(
      /* Ajax request URL */
      this.href + '&amp;confirm=1' + (Prototype.Browser.Opera ? "" : "&amp;ajax=1"),
      /* Ajax request parameters */
      {
        onCreate : function() {
          // Disable the button, to avoid a cascade of clicks from impatient users
          this.disabled = true;
        }.bind(this),
        onSuccess : function(table, rowIdx) {
          // Remove the corresponding HTML element from the UI and update the livetable
          table.deleteRow(rowIdx);
        }.bind(this, table, rowIdx),
        // This is an expected 404, returned when the document has been successfully deleted and is no longer found
        on404 : function(response, table, rowIdx) {
          response.request.options.onSuccess(table, rowIdx);
        }.bindAsEventListener(this, table, rowIdx),
        onComplete : function() {
          // In the end: re-enable the button
          this.disabled = false;
        }.bind(this)
      },
      /* Interaction parameters */
      {
         confirmationText: "$msg.get('core.recyclebin.completelyDeleteConfirm')",
         progressMessageText : "$msg.get('xe.index.trash.documents.delete.inProgress')",
         successMessageText : "$msg.get('xe.index.trash.documents.delete.done')",
         failureMessageText : "$msg.get('xe.index.trash.documents.delete.failed')"
      }
      );
  }
}
/*
 * The livetable is hidden when javascript is disabled, so that an alternative &lt;noscript&gt; table is displayed.
 * Re-display it when the document loads and Javascript is available.
 */
document.observe('xwiki:dom:loaded', function() {
  if ($('documentsTrash')) {
    $('documentsTrash').up('.hidden').removeClassName('hidden');
  }
});</code>
</property>
<property>
<name></name>
</property>
<property>
<parse>1</parse>
</property>
<property>
<use>onDemand</use>
</property>
</object>
<object>
<class>
<name>XWiki.StyleSheetExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>XWiki.DeletedDocuments</name>
<number>0</number>
<className>XWiki.StyleSheetExtension</className>
<guid>aa8c7e27-a767-4e44-ac29-7809763dff56</guid>
<property>
<cache>long</cache>
</property>
<property>
<code>.itemActions .tool {
  width: 16px;
  height: 16px;
  margin: 0 2px;
  float: left;
  text-indent: -1000em;
  overflow: hidden;
  background: transparent no-repeat center center;
}
.itemActions .delete {
  background-image: url($xwiki.getSkinFile('icons/silk/cross.gif')) !important;
}
.itemActions .restore {
   background-image: url($xwiki.getSkinFile('/icons/silk/arrow_refresh.gif')) !important;
}
.itemActions .cannot-restore {
   background-image: url($xwiki.getSkinFile('/icons/silk/page_error.gif')) !important;
}</code>
</property>
<property>
<name></name>
</property>
<property>
<parse>1</parse>
</property>
<property>
<use>onDemand</use>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<usesList>1</usesList>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<usesList>1</usesList>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>XWiki.DeletedDocuments</name>
<number>0</number>
<className>XWiki.XWikiRights</className>
<guid>0379009f-23c6-45eb-b4bd-0397c7751170</guid>
<property>
<allow>1</allow>
</property>
<property>
<groups>XWiki.XWikiAdminGroup,</groups>
</property>
<property>
<levels>view,edit</levels>
</property>
<property>
<users></users>
</property>
</object>
<content>{{velocity}}##
#if(!$xwiki.hasProgrammingRights())
  {{warning}}This document requires programming rights and needs to be saved by an administrator of this Wiki{{/warning}}
#else
#set($dateFormat = 'yyyy MMMM d, HH:mm')
#if(!$request.list)
$xwiki.ssx.use('XWiki.DeletedDocuments')##
$xwiki.jsx.use('XWiki.DeletedDocuments')##
##
#set($columns = ["ddoc.fullName", "ddoc.title", "ddoc.date", "ddoc.deleter", 'actions'])
#set($columnProperties = {
    'ddoc.fullName'  : { 'type' : 'text', 'size' : 10 },
    'ddoc.title'     : { 'type' : 'text', 'filterable' : false, 'sortable' : false },
    'ddoc.date'      : { 'type' : 'date', 'filterable' : false },
    'ddoc.deleter'   : { 'type' : 'text', 'size' : 10 },
    'actions'        : { 'type' : 'text', 'filterable' : false, 'sortable' : false }
  })##
#set($options = {
    'url'               : "$xwiki.getURL('XWiki.DeletedDocuments', 'view', 'list=1&amp;xpage=plain&amp;outputSyntax=plain')",
    'callback'          : 'XWiki.index.trash.documents.displayEntry',
    'translationPrefix' : 'xe.index.trash.documents.'
  })##
##
##
##
{{html wiki="true" clean="false"}}
&lt;div class="hidden"&gt;
#livetable('documentsTrash' $columns $columnProperties $options)
&lt;/div&gt;
{{/html}}
##
##
##

{{html wiki="true" clean="false"}}
&lt;noscript&gt;
  #set($deletedDocuments = $xwiki.search('select count(ddoc.id) from XWikiDeletedDocument as ddoc').get(0))
  #if($deletedDocuments == 0)

    {{info}}$msg.get('xe.index.trash.documents.empty'){{/info}}

  #else
  #macro(displayDeletedDoc $id)
    #set($ddoc = $xwiki.getDeletedDocument('', '', "$id"))
    #set($originalDocument = $ddoc.getDocument())
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="$originalDocument.getURL('view', "viewer=recyclebin&amp;amp;id=${id}")"&gt;$ddoc.fullName&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;$originalDocument.displayTitle&lt;/td&gt;
      &lt;td&gt;$xwiki.formatDate($ddoc.getDate(), $dateFormat)&lt;/td&gt;
      &lt;td&gt;$xwiki.getLocalUserName($ddoc.getDeleter())&lt;/td&gt;
      &lt;td class="itemActions"&gt;
        #if($xwiki.getDocument($ddoc.fullName).isNew())
          #if($ddoc.canUndelete())
            &lt;a href="${originalDocument.getURL('undelete', "id=${id}")}" class="tool restore" title="$msg.get('xe.index.trash.documents.actions.restore.tooltip')"&gt;$msg.get('xe.index.trash.documents.actions.restore.text')&lt;/a&gt;
          #end
        #else
          &lt;a href="${originalDocument.getURL()}" class="tool cannot-restore" title="$msg.get('xe.index.trash.documents.actions.cannotRestore.tooltip')"&gt;$msg.get('xe.index.trash.documents.actions.cannotRestore.text')&lt;/a&gt;
        #end
        #if($ddoc.canDelete())
          &lt;a href="${originalDocument.getURL('delete', "id=${id}&amp;amp;xredirect=$util.encodeURI($!request.getRequestURI())?$util.encodeURI($!request.getQueryString())")}" class="tool delete" title="$msg.get('xe.index.trash.documents.actions.delete.tooltip')"&gt;$msg.get('xe.index.trash.documents.actions.delete.text')&lt;/a&gt;
        #end
      &lt;/td&gt;
    &lt;/tr&gt;
  #end
##
  #if("$!{request.view}" == '')
    #set($queryParams = '')
  #else
    #set($queryParams = "view=$!{request.view}")
  #end
  #set($paginationParameters = {
    'totalItems' : $xwiki.search("select count(ddoc.id) from XWikiDeletedDocument as ddoc").get(0),
    'defaultItemsPerPage' : 15,
    'url' : $doc.getURL('view', $queryParams)
  })
  #pagination($paginationParameters)
  &lt;table id="searchResults" class="xwiki-livetable xwiki-livetable-display"&gt;
    &lt;thead class="xwiki-livetable-display-header"&gt;&lt;tr&gt;
      &lt;th scope="col" class="xwiki-livetable-display-header-text selected asc"&gt;$msg.get('xe.index.trash.documents.ddoc.fullName')&lt;/th&gt;
      &lt;th scope="col" class="xwiki-livetable-display-header-text"&gt;$msg.get('xe.index.trash.documents.ddoc.title')&lt;/th&gt;
      &lt;th scope="col" class="xwiki-livetable-display-header-text"&gt;$msg.get('xe.index.trash.documents.ddoc.date')&lt;/th&gt;
      &lt;th scope="col" class="xwiki-livetable-display-header-text"&gt;$msg.get('xe.index.trash.documents.ddoc.deleter')&lt;/th&gt;
      &lt;th scope="col" class="xwiki-livetable-display-header-text"&gt;$msg.get('xe.index.trash.documents.actions')&lt;/th&gt;
    &lt;/tr&gt;&lt;/thead&gt;
    &lt;tbody class="xwiki-livetable-display-body"&gt;
    #foreach($item in $xwiki.search('select ddoc.id from XWikiDeletedDocument as ddoc order by ddoc.fullName asc', $paginationParameters.itemsPerPage, $paginationParameters.firstItem))
      #displayDeletedDoc($item)
    #end
    &lt;/tbody&gt;
  &lt;/table&gt;
  #set($discard = $paginationParameters.put('position', 'bottom'))
  #pagination($paginationParameters)
  #end ## deletedDocuments.size
&lt;/noscript&gt;
{{/html}}##
#else ## request.list
## ============================================================================================
## This page is called from live table via Ajax with the argument xpage=plain. It returns a
## set of results serialized in JSON.
## @programming This service page needs to be saved by a user with the programming access level
## to work as expected
## ============================================================================================
#if("$!{request.get('xpage')}" == 'plain')
$response.setContentType('application/json')
#set($offset = $util.parseInt($request.get('offset')))
## offset starts from 0 in velocity and 1 in javascript
#set($offset = $offset - 1)
#set($limit = $util.parseInt($request.get('limit')))
#set($docNameFilter = $request.get('ddoc.fullName'))
#set($deleterFilter = $request.get('ddoc.deleter'))
#set($sql = '')
#if("$!{docNameFilter}" != '')
  #set($sql = "and lower(ddoc.fullName) like '%${docNameFilter.trim().toLowerCase()}%' ")
#end
#if("$!{deleterFilter}" != '')
  #set($sql = $sql + "and lower(ddoc.deleter) like '%${deleterFilter.trim().toLowerCase()}%' ")
#end
#if("$!{request.sort}" != '')
  #set($order = $request.sort)
#else
  #set($order = 'ddoc.id')
#end
#if("$!{request.dir}" != '')
  #set($dir = $request.dir)
#else
  #set($dir = 'asc')
#end
#set($selectSql = "select ddoc.id from XWikiDeletedDocument as ddoc where 1=1 " + $sql + " order by $order $dir")
#set($countSql = "select count(*) from XWikiDeletedDocument as ddoc where 1=1 " + $sql)
#set($items = $xwiki.search($selectSql, $limit, $offset))
#set($totalItems = $xwiki.search($countSql).get(0))
#set($returnedItems = $items.size())
## ==============================================
## json starts
## ==============================================
{
"totalrows": $totalItems,
"returnedrows": $returnedItems,
"offset": ${request.get('offset')},
"reqNo": ${request.reqNo},
"rows": [
#foreach($item in $items)
  #set($ddoc = $xwiki.getDeletedDocument('', '', "$item"))
  #if($velocityCount &gt; 1) , #end
  {
     #set($originalDocument = $ddoc.getDocument())
     "fullname"  : "$originalDocument.fullName",
     "title"  : "$originalDocument.displayTitle",
     "url" : "$originalDocument.getURL('view', "viewer=recyclebin&amp;id=${item}")",
     "originalUrl" : "$originalDocument.getURL()",
     "canDelete" : $ddoc.canDelete(),
     "deleteUrl" : "$originalDocument.getURL('delete', "id=${item}")",
     "canRestore" : $ddoc.canUndelete(),
     "alreadyExists" : !$xwiki.getDocument($ddoc.fullName).isNew(),
     "restoreUrl" : "$originalDocument.getURL('undelete', "id=${item}")",
     "date" : "$xwiki.formatDate($ddoc.date, $dateFormat)",
     "deleter" : "$ddoc.deleter",
     "deletername" : "$xwiki.getUserName($ddoc.deleter, false)",
     "deleterurl" : "$xwiki.getURL($ddoc.deleter, 'view')"
   }
#end
]}
## ==============================================
## json ended
## ==============================================
#end## xpage=plain
#end## request.list
#end## hasProgramR
{{/velocity}}</content></xwikidoc>
